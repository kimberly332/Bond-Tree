rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if current user is friends with the author
    function isFriend(authorId) {
      let authorDoc = get(/databases/$(database)/documents/users/$(authorId));
      let currentUserDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      let authorEmail = authorDoc.data.email;
      
      // Check if author's email is in current user's friends list
      return authorEmail in currentUserDoc.data.friends;
    }
    
    // Allow read access to user documents for username availability check
    match /users/{userId} {
      allow read: if true;
    }
    
    // Existing user document write rules
    match /users/{userId} {
      allow read: if request.auth != null;
  
      allow create: if request.auth != null 
                    && request.resource.data.username.size() >= 3 
                    && request.resource.data.username.size() <= 15
                    && request.resource.data.username.matches('^[a-zA-Z0-9_]+$');
      
      allow update: if request.auth.uid == userId || 
              // Allow adding/removing friend requests and sent requests
              request.resource.data.diff(resource.data).affectedKeys().hasOnly(['friendRequests', 'friends', 'sentFriendRequests']);
              
      allow delete: if request.auth.uid == userId;
    }
    
    // Posts collection rules - UPDATED for email-based friendship check
    match /posts/{postId} {
      allow read: if request.auth != null && 
        (
          resource.data.authorId == request.auth.uid || 
          resource.data.privacy == "public" ||
          isFriend(resource.data.authorId)
        );
          
      // Allow creating posts if authenticated and setting themselves as author
      allow create: if request.auth != null &&
                    request.resource.data.authorId == request.auth.uid;
                    
      // Allow update and delete if authenticated and is the author
      allow update, delete: if request.auth != null && 
                             resource.data.authorId == request.auth.uid;
    }
  }
}